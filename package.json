{
  "type": "module",
  "scripts": {
    "preinstall": "node scripts/check-forbidden-packages.cjs",
    "dev": "vite --host",
    "build": "vite build",
    "build:analyze": "vite build --analyze",
    "preview": "vite preview",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "tauri:build:production": "cross-env NODE_ENV=production tauri build --config src-tauri/tauri.conf.json",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ci": "vitest run --coverage --reporter=verbose --no-color",
    "test:performance-budgets": "vitest --run --config vitest.performance.config.ts",
    "test:bundle-size": "npm run build && node scripts/bundle-analyzer.cjs",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:update": "playwright test --update-snapshots",
    "test:mvp": "vitest run src/test/mvp/unit/",
    "test:mvp:e2e": "playwright test src/test/mvp/e2e/",
    "test:mvp:integration": "vitest run src/test/mvp/integration/",
    "test:mvp:all": "npm run test:mvp && npm run test:mvp:integration",
    "test:desktop": "node scripts/desktop-e2e-smoke.mjs",
    "analyze:bundle": "node scripts/bundle-analyzer.cjs",
    "lighthouse:prod": "lighthouse http://localhost:4173 --output=html --output-path=./lighthouse-report.html",
    "type-check": "tsc --noEmit",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,json}\"",
    "audit:security": "npm audit --audit-level moderate",
    "audit:licenses": "license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC'",
    "clean": "rimraf dist",
    "clean:deps": "rimraf node_modules package-lock.json && npm install",
    "deps:json:src": "depcruise src --config .dependency-cruiser.cjs --output-type json > .dependency-cache/depcruise-src.json",
    "deps:dot:src": "depcruise src --config .dependency-cruiser.cjs --output-type dot > .dependency-cache/depcruise-src.dot",
    "deps:svg:src": "node scripts/deps-render.mjs .dependency-cache/depcruise-src.dot .dependency-cache/depcruise-src.svg",
    "deps:metrics:src": "node scripts/deps-metrics.mjs .dependency-cache/depcruise-src.json .dependency-cache/depcruise-src.metrics.txt .dependency-cache/src-edges.tsv",
    "deps:edges:src": "node scripts/deps-edges.mjs .dependency-cache/depcruise-src.json .dependency-cache/src-edges.tsv",
    "deps:focused:src": "node scripts/edges-to-dot.mjs .dependency-cache/src-edges.tsv .dependency-cache/depcruise-src-focused.dot && node scripts/deps-render.mjs .dependency-cache/depcruise-src-focused.dot .dependency-cache/depcruise-src-focused.svg",
    "deps:all:src": "npm run deps:json:src && npm run deps:dot:src && npm run deps:svg:src && npm run deps:metrics:src && npm run deps:focused:src",
    "deps:json:canvas": "depcruise src/features/canvas --config .dependency-cruiser.cjs --output-type json > .dependency-cache/depcruise-canvas.json",
    "deps:dot:canvas": "depcruise src/features/canvas --config .dependency-cruiser.cjs --output-type dot > .dependency-cache/depcruise-canvas.dot",
    "deps:svg:canvas": "node scripts/deps-render.mjs .dependency-cache/depcruise-canvas.dot .dependency-cache/depcruise-canvas.svg",
    "deps:metrics:canvas": "node scripts/deps-metrics.mjs .dependency-cache/depcruise-canvas.json .dependency-cache/depcruise-canvas.metrics.txt .dependency-cache/canvas-edges.tsv",
    "deps:edges:canvas": "node scripts/deps-edges.mjs .dependency-cache/depcruise-canvas.json .dependency-cache/canvas-edges.tsv",
    "deps:focused:canvas": "node scripts/edges-to-dot.mjs .dependency-cache/canvas-edges.tsv .dependency-cache/depcruise-canvas-focused.dot && node scripts/deps-render.mjs .dependency-cache/depcruise-canvas-focused.dot .dependency-cache/depcruise-canvas-focused.svg",
    "deps:all:canvas": "npm run deps:json:canvas && npm run deps:dot:canvas && npm run deps:svg:canvas && npm run deps:metrics:canvas && npm run deps:focused:canvas"
  },
  "dependencies": {
    "@tauri-apps/api": "^2.8.0",
    "@tauri-apps/plugin-dialog": "^2.4.0",
    "@tauri-apps/plugin-fs": "^2.4.2",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "browser-image-compression": "^2.0.2",
    "idb-keyval": "^6.2.2",
    "immer": "^10.1.3",
    "konva": "^9.3.22",
    "lucide-react": "^0.544.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@aduh95/viz.js": "^3.7.0",
    "@hpcc-js/wasm": "^2.26.2",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4.1.13",
    "@tauri-apps/cli": "^2.8.4",
    "@types/jsdom": "^21.1.7",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@viz-js/viz": "^3.18.0",
    "autoprefixer": "^10.4.21",
    "cross-env": "^7.0.3",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^8.45.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.3",
    "jsdom": "^27.0.0",
    "license-checker": "^25.0.1",
    "lighthouse": "^12.8.2",
    "postcss": "^8.5.6",
    "prettier": "^3.0.0",
    "puppeteer": "^24.22.2",
    "rimraf": "^5.0.1",
    "selenium-webdriver": "^4.24.0",
    "tailwindcss": "^4.1.13",
    "typescript": "~5.6.2",
    "vite": "^7.1.5",
    "vitest": "^3.2.4",
    "vitest-canvas-mock": "^0.3.3"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "overrides": {
    "react-konva": {
      ".": false
    },
    "@konva/react": {
      ".": false
    },
    "react-canvas-konva": {
      ".": false
    }
  }
}
